{"version":3,"sources":["components/Posts.js","components/CurrentUserPosts.js","images/logo.png","components/Registration.js","components/Home.js","components/Account.js","components/Profile.js","components/NewPost.js","components/DeletePost.js","components/EditPost.js","components/SendMessage.js","components/SinglePost.js","components/SentMessage.js","components/ReceivedMessage.js","index.js"],"names":["postURL","Posts","token","currentUser","posts","setPosts","isLoggedIn","author","username","useSearchParams","searchParams","setSearchParams","searchTerm","get","filteredPosts","filter","post","text","toLowerCase","title","description","price","location","includes","postMatches","fetchPosts","a","fetch","response","json","result","data","useEffect","className","type","name","placeholder","value","onChange","event","target","length","map","to","_id","willDeliver","CurrentUserPosts","currentUserPosts","setCurrentUserPosts","fetchUserData","headers","active","post_id","Home","src","logo","alt","AccountForm","setToken","action","setIsLoggedIn","setCurrentUser","useState","setUsername","password","setPassword","showCredentialsError","setShowCredentialsError","accountError","setAccountError","navigate","useNavigate","auth_user_token","submitAccountInfo","preventDefault","method","body","JSON","stringify","user","userData","console","log","onSubmit","Profile","currentUserMessages","setCurrentUserMessages","AddPost","setPost","handleSubmit","then","finally","catch","error","DeletePost","handleDelete","onClick","EditPost","handleEdit","SendMessage","Content","message","setMessage","postId","useParams","content","SinglePost","index","SentMessages","messages","fromUser","MessagesRecieved","AddPostButton","Main","savedToken","localStorage","getItem","path","exact","element","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c8aef8dc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport './Posts.css'\n\n\n\nconst baseURL = 'https://strangers-things.herokuapp.com/api'\nconst cohort = '/2108-CSE-RM-WEB-PT'\nconst postURL = `${baseURL}${cohort}/posts`\n\nconst Posts = ({token, currentUser, posts, setPosts, isLoggedIn}, {author: _id, username}) => {\n  const [searchParams, setSearchParams] = useSearchParams()\n  const searchTerm = searchParams.get('searchTerm')\n\n\n  const postMatches = (post, text) => {\n    text = text.toLowerCase()\n    const {title, description, price, location } = post\n\n    for (const field of [title, description, price, location ]) {\n      if(field.toLowerCase().includes(text)){\n        return true;\n      }\n    }\n  }\n\n  const filteredPosts = searchTerm ? posts.filter(post => postMatches(post, searchTerm)) : posts\n\n\n  \n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(postURL)\n      const result = await response.json()\n      setPosts(result.data.posts)    \n    } catch (error) {\n      throw error\n    }\n  }\n  useEffect (\n      fetchPosts, []\n  )\n  return <>\n    <div className='searchBoxContainer'>\n      <div className='searchHeader'>Search</div><input type='text' name='search' placeholder='title, description, price...' value={searchTerm} onChange={(event) => {\n      setSearchParams({searchTerm:event.target.value})}} />\n    </div>\n    \n    { filteredPosts && filteredPosts.length\n      ? filteredPosts.map((post) => {\n        return (\n            <div key={post._id} className='post'>\n                <div className='description'>\n                    <div className='postTitle'><b>{post.title}</b></div>   \n                    <div className='sellerDetails'><b>Seller: </b> {post.author.username}\n                     </div>\n                    <div><b>Item Description: </b><i>{post.description}</i></div>\n                    {isLoggedIn && <NavLink to={`/posts/${post._id}`} className='sendMessageButton'>Send message</NavLink> }\n                </div>\n                <div>\n                    <div>\n                        <div className='price'><b>Price </b>{post.price}</div>\n                    </div>\n                    <div>\n                        <div className='delivery'>\n                            <b>Delivery </b> {post.willDeliver ? 'available' : 'not available'}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n      })\n      : <h1>No results</h1>\n    } \n  </>\n}\nexport default Posts;","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CurrentUserPosts.css';\nimport { DeletePost } from '.';\nimport { EditPost } from '.';\n\nconst CurrentUserPosts = ({currentUser, token, posts, setPosts, currentUserPosts, setCurrentUserPosts}) => {\n    const fetchUserData = async () => {\n        try {\n            const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n              }\n          })\n            const result = await response.json()\n            setCurrentUserPosts(result.data.posts)\n        } catch (error) {\n            \n        }\n    }  \n      useEffect (\n          fetchUserData, []\n      )\n    return <>\n        {\n            currentUserPosts && currentUserPosts.map((post)=> {\n                if (post.active === true) {\n                return  <>\n                <div className='currentUserPostTitle'>{post.title} ({post.price})</div>\n                <div className='currentUserPostDescription'>Item Description: {post.description}</div>\n                <div className='postButtons'>\n                    {/* <EditPost token={token} currentUser={currentUser} posts={posts} setPosts={setPosts} post_id={post._id} currentUserPosts={currentUserPosts} setCurrentUserPosts={setCurrentUserPosts}/> */}\n                    <DeletePost token={token} currentUser={currentUser} posts={posts} setPosts={setPosts} post_id={post._id} currentUserPosts={currentUserPosts} setCurrentUserPosts={setCurrentUserPosts}/>\n                </div>\n                </>\n                }\n            })\n        } \n        \n    </>   \n    }\n    \nexport default CurrentUserPosts;","export default __webpack_public_path__ + \"static/media/logo.31ba542d.png\";","import React from \"react\"\nimport './Registration.css';\n\nconst baseURL = 'https://strangers-things.herokuapp.com/api'\nconst cohort = '/2108-CSE-RM-WEB-PT'\nconst registerURL = `${baseURL}${cohort}/users/register`\n\nconst Register = () => {\n    const createAccount = (event) => {\n        event.preventDefault();\n    }\n    return (\n        <>\n        <h1>Create a New Account</h1>\n        <form onSubmit={createAccount}>\n            <input type='text' placeholder='Username' />\n            <button type='submit'>Create Account</button>\n        </form>\n        </>\n    )\n    \n}\n\nexport default Register;","import React from 'react';\nimport './Home.css';\nimport logo from '../images/logo.png';\n\nconst Home = () => {\n   return <> \n        <div className='homeLogoContainer'><img src={logo} alt='Logo' className='homeLogo' /></div>\n       </> \n}\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./Account.css\" \n\n\nconst AccountForm = ({setToken, action, setIsLoggedIn, isLoggedIn, setCurrentUser}) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [showCredentialsError, setShowCredentialsError] = useState(false)\n  const [accountError, setAccountError] = useState('')\n  const navigate = useNavigate()\n\n\n  useEffect(() => {\n    if (isLoggedIn) navigate('/account')\n  }, [])\n\n  const fetchUserData = async (auth_user_token) => {\n      try {\n          const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${auth_user_token}`\n            }\n        })\n          const result = await response.json()\n          return result\n      } catch (error) {\n          \n      }\n  }\n\n  const submitAccountInfo = async (event) => {\n    try {\n      event.preventDefault();\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/${action}`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      })\n      const result = await response.json()\n      const auth_user_token = result.data.token\n      setToken(auth_user_token)\n      setIsLoggedIn(true)\n  \n\n      const userData = await fetchUserData(auth_user_token)\n      setCurrentUser(userData.data.username)\n      setShowCredentialsError(false)\n      navigate('/account')\n    } catch (error) {\n      console.log(error)\n      const errorMessage = action === 'login' ? \"Incorrect username and password combination.\" : \"Username already taken.\"\n      setAccountError(errorMessage)\n      setShowCredentialsError(true)\n    }\n  }\n\n  return <>\n    <div className=\"actionHeader\">{action}</div>\n    <div className='formContainer'><form onSubmit={submitAccountInfo}>\n      <input type=\"text\" value={username} placeholder=\"username\" onChange={(event)=>{setUsername(event.target.value)}}/>\n      <input type=\"password\" value={password} placeholder=\"password\" onChange={(event)=>{setPassword(event.target.value)}}/>\n      <div className='buttonContainer'><button type=\"submit\">Submit</button></div>\n    </form></div>\n    { showCredentialsError ? <div className=\"error\">{accountError}</div> : null }\n   \n  </>\n}\n\nexport default AccountForm;\n","import React, {useEffect} from \"react\"\nimport { useNavigate } from \"react-router\";\nimport { CurrentUserPosts } from \".\";\nimport { SentMessages } from \".\";\nimport { MessagesRecieved } from \".\";\nimport \"./Profile.css\"\n\nconst Profile = ({isLoggedIn, currentUser, token, posts, setPosts, currentUserPosts, setCurrentUserPosts, currentUserMessages, setCurrentUserMessages}) => {\n  const navigate = useNavigate()\n  console.log(currentUser)\n\n  useEffect(() => {\n    if (!isLoggedIn) navigate('/login')\n  }, [])\n\n  return <>\n    <div className='userGreeting'><b>{`Hello ${currentUser}.`}</b></div>\n    <div className='userDetailsContainer'>\n      <div className='userMessageHeader'>\n      <div className='header'>Your Messages</div>\n        <div className='recievedHeader'>Messages Recieved:</div> \n        <MessagesRecieved isLoggedIn={isLoggedIn} token={token} currentUser={currentUser} posts={posts} setPosts={setPosts} currentUserPosts={currentUserPosts} setCurrentUserPosts={setCurrentUserPosts} currentUserMessages={currentUserMessages} setCurrentUserMessages={setCurrentUserMessages}/>\n        <div className='sentHeader'>Messages Sent:</div>\n        <SentMessages isLoggedIn={isLoggedIn} token={token} currentUser={currentUser} posts={posts} setPosts={setPosts} currentUserPosts={currentUserPosts} setCurrentUserPosts={setCurrentUserPosts} currentUserMessages={currentUserMessages} setCurrentUserMessages={setCurrentUserMessages} />\n     </div>\n      <div className='userPostHeader'>\n        <div className='header'>Your Posts</div>\n      <CurrentUserPosts token={token} currentUser={currentUser} posts={posts} setPosts={setPosts} currentUserPosts={currentUserPosts} setCurrentUserPosts={setCurrentUserPosts}/>\n      </div>\n    </div>\n  </>\n}\n\nexport default Profile;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport './NewPost.css';\n\nconst AddPost = ({token, currentUser}) => {\n    const blankPost = {title: '', description: '', price: ''}\n    const [post, setPost] = useState(blankPost)\n    const navigate = useNavigate()\n    console.log('current User', currentUser)\n\nconst handleSubmit = async (event) => {\n        event.preventDefault()\n        fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                post: post\n            })\n            }).then(response => response.json())\n            .then(result => {\n                console.log(result)\n                \n            }).finally(navigate('/posts'))\n            .catch(console.error);\n} \nreturn <>\n    <h1>Create a new Thingy Listing.</h1>\n    <div className='thingyFormContainer'>\n        <form onSubmit={handleSubmit}>\n            Title:<input value={post.title} placeholder='Post Title' onChange={(event)=>{\n                setPost({...post, title: event.target.value})\n            }}></input>\n            Description:<input value={post.description} placeholder='Item Description' onChange={(event)=>{\n                setPost({...post, description: event.target.value})\n            }}></input>\n            Price:<input value={post.price} placeholder='Item price' onChange={(event)=>{\n                setPost({...post, price: event.target.value})\n            }}></input>\n            <div className='checkbox'> <input className='checkboxInput' type='checkbox' value='yes' onChange={(event)=>{\n                setPost({...post, willDeliver: event.target.value})\n            }}></input>Will Deliver (check if delivery is available) </div>\n            <div className='thingySubmit'><button type='submit'>Submit</button></div>\n        </form>\n    </div>\n</>\n}\nexport default AddPost;","import React, { useEffect } from 'react';\nimport './DeletePost.css'\n\nconst baseURL = 'https://strangers-things.herokuapp.com/api'\nconst cohort = '/2108-CSE-RM-WEB-PT'\nconst postURL = `${baseURL}${cohort}/posts`\n\nconst DeletePost = ({token, currentUser, posts, setPosts, post_id, currentUserPosts, setCurrentUserPosts}) => {\n    const fetchPosts = async () => {\n        try {\n          const response = await fetch(postURL)\n          const result = await response.json()\n          setPosts(result.data.posts)\n          \n    \n        } catch (error) {\n          throw error\n        }\n      }\n      useEffect (\n          fetchPosts, []\n      )\n  \n      const fetchUserData = async () => {\n        try {\n            const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n              }\n          })\n            const result = await response.json()\n            setCurrentUserPosts(result.data.posts)\n        } catch (error) {\n            \n        }\n      }\n\nconst handleDelete = async (event) => {\n    event.preventDefault()\n    try {\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts/${post_id}`, {\n          method: \"DELETE\",\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        const result = await response.json()\n        fetchPosts()\n        fetchUserData()\n      } catch (error) {\n        console.log(error)\n      }\n  } \nreturn <>\n    <button onClick={handleDelete}>Delete</button>\n</>\n}\nexport default DeletePost;\n","import React, { useEffect } from 'react';\n\nconst baseURL = 'https://strangers-things.herokuapp.com/api'\nconst cohort = '/2108-CSE-RM-WEB-PT'\nconst postURL = `${baseURL}${cohort}/posts`\n\nconst EditPost = ({token, currentUser, posts, setPosts, post_id, currentUserPosts, setCurrentUserPosts}) => {\n    const fetchPosts = async () => {\n        try {\n          const response = await fetch(postURL)\n          const result = await response.json()\n          setPosts(result.data.posts)\n          \n    \n        } catch (error) {\n          throw error\n        }\n      }\n      useEffect (\n          fetchPosts, []\n      )\n  \n      const fetchUserData = async () => {\n        try {\n            const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n              }\n          })\n            const result = await response.json()\n            setCurrentUserPosts(result.data.posts)\n        } catch (error) {\n            \n        }\n      }\n\nconst handleEdit = async (event) => {\n    event.preventDefault()\n    \n    fetch(`http://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts/${post_id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: post\n      })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(result);\n      })\n      .catch(console.error);\n\n  }\n  return <>\n    <form>\n      <input value={post.title} placeholder='Post Title' onChange={(event)=>{\n              setPost({...post, title: event.target.value})}}></input>\n      <input type='text'></input>\n\n      <button onClick={handleEdit}>Edit</button>\n    </form>\n  </>\n}\n\n\nexport default EditPost;","import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport './SendMessage.css';\n\nconst SendMessage = ({token, currentUser, posts, post_id}) => {\n    const blankMessage = {Content: ''}\n    const [message, setMessage] = useState(blankMessage)\n    const {postId} = useParams();\n    const navigate = useNavigate()\n\n    const handleSubmitMessage = (event) => {\n        event.preventDefault()\n        fetch(`https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts/${postId}/messages`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                message: message\n            })\n            }).then(response => response.json())\n            .then(result => {\n                console.log('message result',result);\n            }).finally(navigate('/posts'))\n            .catch(console.error);\n                }\n     return <>\n    <h1>Ask the Seller.</h1>\n    <div className='formContainer'>\n        <form onSubmit={handleSubmitMessage}>\n            <input className='messageField' value={message.content} placeholder='Type message here' onChange={(event)=>{\n                setMessage({...message, content: event.target.value})\n            }}></input>\n            <div className='button'><button type='submit'>Send Message</button> </div>\n        </form>\n    </div>\n</>\n}\nexport default SendMessage;\n","import React from 'react';\nimport './Posts.css'\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport { SendMessage } from '.';\n\nconst SinglePost = ({posts, token}) => {\n    const {postId} = useParams();\n\n    return (\n        posts.map((post, index)=> {\n            if (postId === post._id)\n            return (\n                <div key={post._id}>\n                     <div><SendMessage token={token}/></div>\n                     <div  className='post'>\n                        <div className='description'>\n                            <div className='postTitle'><b>{post.title}</b></div>   \n                            <div className='sellerDetails'><b>Seller: </b> {post.author.username}\n                            </div>\n                            <div><b>Item Description: </b><i>{post.description}</i></div>\n                            \n                        </div>\n                        <div>\n                            <div>\n                                <div className='price'><b>Price </b>{post.price}</div>\n                            </div>\n                            <div>\n                                <div className='delivery'>\n                                    <b>Delivery </b> {post.willDeliver ? 'available' : 'not available'}\n                                </div>\n                            </div>\n                        </div>     \n                    </div>\n                   \n                    <div className='backButton'>\n                        <NavLink to='/posts' className='navButton'>BACK TO POSTS</NavLink>\n                    </div> \n                </div>\n            )\n        })\n    )\n}\nexport default SinglePost;","import React, { useEffect } from 'react';\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport './CurrentUserPosts.css';\nimport './SentMessage.css'\nconst SentMessages = ({posts, isLoggedIn, currentUser, token, currentUserMessages, setCurrentUserMessages}) => {\n    const fetchUserData = async () => {\n        console.log('fetch user token', token)\n        try {\n            const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n              }\n          })\n            const result = await response.json()\n            setCurrentUserMessages(result.data.messages)\n        } catch (error) {\n            \n        }\n    }  \n      useEffect (\n          fetchUserData, []\n      )\n    return <>\n        {   \n            currentUserMessages && currentUserMessages.map((message)=> {\n                if(message.fromUser.username === currentUser) {\n                return  <>\n                <div className='sentMessage'>\n                    <div className='sentPostTitle'>Post Title: {message.post.title} <NavLink to={`/posts/${message.post._id}`} className='sendMessageButton'>New message</NavLink></div>\n                    <div className='sentPostContent'>Message: {message.content}</div>\n                </div>\n                </>\n                }\n\n            })\n        } \n    </>   \n    }\n\nexport default SentMessages;","import React, { useEffect } from 'react';\nimport './CurrentUserPosts.css';\nimport './SentMessage.css'\n\n\nconst MessagesRecieved = ({posts, isLoggedIn, currentUser, token, currentUserMessages, setCurrentUserMessages}) => {\n    const fetchUserData = async () => {\n        try {\n            const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n              }\n          })\n            const result = await response.json()\n            setCurrentUserMessages(result.data.messages)\n            const sender = result.data.messages.fromUser.username\n\n        } catch (error) {   \n            }\n        }  \n      useEffect (\n          fetchUserData, []\n      )\n    return <>\n        {   \n            currentUserMessages && currentUserMessages.map((message)=> {\n                if(message.fromUser.username !== currentUser) {\n                return  <>\n                <div className='sentMessage'>\n                    <div className='sentPostTitle'>\n                        <div>Post Title: {message.post.title} </div>\n                        <div className='fromUser'>From: {message.fromUser.username}</div>\n                    </div>\n                    <div className='sentPostContent'>Message: {message.content}</div>\n                </div>\n                </>\n                }\n            })\n        }   \n    </>   \n}\n\nexport default MessagesRecieved;","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Routes, Route, NavLink, BrowserRouter as Router, BrowserRouter } from 'react-router-dom';\nimport './style.css'\nimport {\n   Posts,\n   Home,\n   AccountForm,\n   Profile,\n   AddPost,\n   SendMessage,\n   EditPost,\n   SinglePost\n} from './components'\n\n\nconst AddPostButton = () => {\n    return <>\n    <NavLink to='/new_post' className='addPostLink'>Add a Post</NavLink>\n    </>\n}\n\nconst Main = () => {\n    const [token, setToken] = useState('')\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const [currentUser, setCurrentUser] = useState({})\n    const [posts, setPosts] = useState([])\n    const [currentUserPosts, setCurrentUserPosts] = useState([])\n    const [currentUserMessages, setCurrentUserMessages] = useState([])\n\n    useEffect(() => {\n        const savedToken = localStorage.getItem('token')\n        console.log('token exists')\n        if (savedToken) {\n            setToken(savedToken)\n            setIsLoggedIn(true)\n        }\n    })\n\n    return (\n        <>\n        <div>\n        \n        <nav>\n            <NavLink to='/'>Home</NavLink>\n            <NavLink to='/account'>Account</NavLink> \n            <NavLink to='/posts'>Posts</NavLink>\n        </nav>\n       \n        <Routes>\n            <Route path='/' exact element={ \n                <>\n                <Home /> \n                <div className='accountSubmissionContainer'>\n                    <div className='homeRegistrationContainer'>\n                        <h1>Hello Stranger. </h1>\n                        { !isLoggedIn && <AccountForm action='register' setToken={setToken} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/> } \n                    </div>\n                    <div className='homeLoginContainer'>\n                        <h1>Welcome Back.</h1>\n                        { !isLoggedIn && <AccountForm action='login' setToken={setToken} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/> }\n                    </div>\n                </div>\n                </>\n                }/>\n            <Route path='/register' exact element= { <AccountForm action='register' setToken={setToken} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/> } />\n            <Route path='/login' element={ <>\n                <AccountForm setToken={setToken} action=\"login\" setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser} />  \n                <div className='loginImage'><img src='https://www.seekpng.com/png/full/804-8044394_lets-get-moving-house-things-in-cartoon.png' /></div> \n                </> } />\n                \n            <Route path='/account' exact element = { <Profile isLoggedIn={isLoggedIn} token={token} currentUser={currentUser} posts={posts} setPosts={setPosts} currentUserPosts={currentUserPosts} setCurrentUserPosts={setCurrentUserPosts} currentUserMessages={currentUserMessages} setCurrentUserMessages={setCurrentUserMessages}/> } />\n            <Route path='/posts' exact element={\n                <> \n                <div className='postHeader'><h1>Thingy Listings</h1></div>\n                {isLoggedIn && <div className='addPostButton'><AddPostButton /></div> } \n                <Posts posts={posts} setPosts={setPosts} currentUser={currentUser} token={token} isLoggedIn={isLoggedIn}/>\n                </> } />\n            <Route path='/message' exact element={ <SendMessage posts={posts}/> } />\n            <Route path='/new_post' exact element={ <AddPost token={token} currentUser={currentUser}/> } />\n            <Route path='/edit' exact element={<EditPost token={token} currentUser={currentUser} posts={posts} setPosts={setPosts} currentUserPosts={currentUserPosts} setCurrentUserPosts={setCurrentUserPosts}/>} />\n            <Route path='/posts/:postId' exact element ={ <SinglePost posts={posts} setPosts={setPosts} currentUser={currentUser} token={token} isLoggedIn={isLoggedIn}/>} />\n        </Routes>\n        </div>\n        </>\n        \n    )\n\n}\n\n\n\nReactDOM.render(\n    <Router>\n        <Main />\n    </Router>,\n    document.querySelector('#app')\n)"],"sourceRoot":""}