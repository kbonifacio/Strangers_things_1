{"ast":null,"code":"var _jsxFileName = \"/Users/kriseldabonifacio/course_work/Strangers_things/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountForm = _ref => {\n  _s();\n\n  let {\n    setToken,\n    action,\n    setIsLoggedIn,\n    isLoggedIn\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showCredentialsError, setShowCredentialsError] = useState(false);\n  const [accountError, setAccountError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isLoggedIn) navigate('/account');\n  }, []);\n\n  const submitAccountInfo = async event => {\n    try {\n      event.preventDefault();\n      const response = await fetch(`http://localhost:4000/api/2108-CSE-RM-WEB-PT/guests/${action}`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          guest: {\n            username: username,\n            password: password\n          }\n        })\n      });\n      const result = await response.json();\n      const auth_user_token = result.data.token;\n      setToken(auth_user_token);\n      setIsLoggedIn(true); //make api call to get user data, setCurrentUser\n\n      setShowCredentialsError(false);\n      navigate('/profile');\n    } catch (error) {\n      console.log(error);\n      const errorMessage = action === 'login' ? \"Incorrect username and password combination.\" : \"Username already taken.\";\n      setAccountError(errorMessage);\n      setShowCredentialsError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitAccountInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          placeholder: \"username\",\n          onChange: event => {\n            setUsername(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          placeholder: \"password\",\n          onChange: event => {\n            setPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: action.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), showCredentialsError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: accountError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 30\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"iJXTzxnCETw7a/l+Zay4bpByosc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/components/Account.js"],"names":["React","useState","useEffect","useNavigate","AccountForm","setToken","action","setIsLoggedIn","isLoggedIn","username","setUsername","password","setPassword","showCredentialsError","setShowCredentialsError","accountError","setAccountError","navigate","submitAccountInfo","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","guest","result","json","auth_user_token","data","token","error","console","log","errorMessage","target","value","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\n\n\nconst AccountForm = ({setToken, action, setIsLoggedIn, isLoggedIn}) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [showCredentialsError, setShowCredentialsError] = useState(false)\n  const [accountError, setAccountError] = useState('')\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (isLoggedIn) navigate('/account')\n  }, [])\n\n  const submitAccountInfo = async (event) => {\n    try {\n      event.preventDefault();\n      const response = await fetch(`http://localhost:4000/api/2108-CSE-RM-WEB-PT/guests/${action}`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          guest: {\n            username: username,\n            password: password\n          }\n        })\n      })\n      const result = await response.json()\n      const auth_user_token = result.data.token\n      setToken(auth_user_token)\n      setIsLoggedIn(true)\n      //make api call to get user data, setCurrentUser\n      setShowCredentialsError(false)\n      navigate('/profile')\n    } catch (error) {\n      console.log(error)\n      const errorMessage = action === 'login' ? \"Incorrect username and password combination.\" : \"Username already taken.\"\n      setAccountError(errorMessage)\n      setShowCredentialsError(true)\n    }\n  }\n\n  return <>\n    <h1>{action}</h1>\n    <form onSubmit={submitAccountInfo}>\n      <div><input type=\"text\" value={username} placeholder=\"username\" onChange={(event)=>{setUsername(event.target.value)}}/></div>\n      <div><input type=\"password\" value={password} placeholder=\"password\" onChange={(event)=>{setPassword(event.target.value)}}/></div>\n      <div><button type=\"submit\">{action.toUpperCase()}</button></div>\n    </form>\n    { showCredentialsError ? <div className=\"error\">{accountError}</div> : null }\n\n  </>\n}\n\nexport default AccountForm;"]},"metadata":{},"sourceType":"module"}