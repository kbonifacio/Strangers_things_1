{"ast":null,"code":"var _jsxFileName = \"/Users/kriseldabonifacio/course_work/Strangers_things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport './Posts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://strangers-things.herokuapp.com/api';\nconst cohort = '/2108-CSE-RM-WEB-PT';\nconst postURL = `${baseURL}${cohort}/posts`;\n\nconst Posts = (_ref, _ref2) => {\n  _s();\n\n  let {\n    token,\n    currentUser,\n    posts,\n    setPosts,\n    isLoggedIn\n  } = _ref;\n  let {\n    author: _id,\n    username\n  } = _ref2;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchTerm = searchParams.get('searchTerm');\n\n  const postMatches = (post, text) => {\n    text = text.toLowerCase();\n    const {\n      title,\n      description,\n      price,\n      location\n    } = post;\n\n    for (const field of [title, description, price, location]) {\n      if (field.toLowerCase().includes(text)) {\n        return true;\n      }\n    }\n  };\n\n  const filteredPosts = searchTerm ? posts.filter(post => postMatches(post, searchTerm)) : posts;\n\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(postURL);\n      const result = await response.json();\n      setPosts(result.data.posts);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(fetchPosts, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBoxContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchHeader\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search\",\n        placeholder: \"title, description, price...\",\n        value: searchTerm,\n        onChange: event => {\n          setSearchParams({\n            searchTerm: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), filteredPosts && filteredPosts.length ? filteredPosts.map((post, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sellerDetails\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Seller: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 52\n            }, this), \" \", post.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Item Description: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/posts/${post._id}`,\n            className: \"sendMessageButton\",\n            children: \"Send message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Price \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 48\n              }, this), post.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delivery\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Delivery \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this), \" \", post.willDeliver ? 'available' : 'not available']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Posts, \"Bz4e+OFDIgFVyDGuPIy9tx6AY8U=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/components/Posts.js"],"names":["React","useState","useEffect","NavLink","useSearchParams","baseURL","cohort","postURL","Posts","token","currentUser","posts","setPosts","isLoggedIn","author","_id","username","searchParams","setSearchParams","searchTerm","get","postMatches","post","text","toLowerCase","title","description","price","location","field","includes","filteredPosts","filter","fetchPosts","response","fetch","result","json","data","error","event","target","value","length","map","index","willDeliver"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport './Posts.css'\n\n\n\nconst baseURL = 'https://strangers-things.herokuapp.com/api'\nconst cohort = '/2108-CSE-RM-WEB-PT'\nconst postURL = `${baseURL}${cohort}/posts`\n\nconst Posts = ({token, currentUser, posts, setPosts, isLoggedIn}, {author: _id, username}) => {\n  const [searchParams, setSearchParams] = useSearchParams()\n  const searchTerm = searchParams.get('searchTerm')\n\n\n  const postMatches = (post, text) => {\n    text = text.toLowerCase()\n    const {title, description, price, location } = post\n\n    for (const field of [title, description, price, location ]) {\n      if(field.toLowerCase().includes(text)){\n        return true;\n      }\n    }\n  }\n\n  const filteredPosts = searchTerm ? posts.filter(post => postMatches(post, searchTerm)) : posts\n\n\n  \n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(postURL)\n      const result = await response.json()\n      setPosts(result.data.posts)\n    \n    } catch (error) {\n      throw error\n    }\n  }\n  useEffect (\n      fetchPosts, []\n  )\n  return <>\n    <div className='searchBoxContainer'>\n      <div className='searchHeader'>Search</div><input type='text' name='search' placeholder='title, description, price...' value={searchTerm} onChange={(event) => {\n      setSearchParams({searchTerm:event.target.value})}} />\n    </div>\n    \n    { filteredPosts && filteredPosts.length\n      ? filteredPosts.map((post, index) => {\n        return (\n            <div key={post._id} className='post'>\n                <div className='description'>\n                    <div className='postTitle'><b>{post.title}</b></div>   \n                    <div className='sellerDetails'><b>Seller: </b> {post.author.username}\n                     </div>\n                    <div><b>Item Description: </b><i>{post.description}</i></div>\n                    {isLoggedIn && <NavLink to={`/posts/${post._id}`} className='sendMessageButton'>Send message</NavLink> }\n                </div>\n                <div>\n                    <div>\n                        <div className='price'><b>Price </b>{post.price}</div>\n                    </div>\n                    <div>\n                        <div className='delivery'>\n                            <b>Delivery </b> {post.willDeliver ? 'available' : 'not available'}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n      })\n      : <h1>No results</h1>\n    } \n  </>\n}\nexport default Posts;"]},"metadata":{},"sourceType":"module"}