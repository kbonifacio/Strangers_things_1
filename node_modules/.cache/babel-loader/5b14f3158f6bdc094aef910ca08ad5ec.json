{"ast":null,"code":"var _jsxFileName = \"/Users/kriseldabonifacio/course_work/Strangers_things/src/components/CurrentUserPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Routes, Route, Link, NavLink, BrowserRouter as Router, useNavigate, useParams, BrowserRouter, useSearchParams } from 'react-router-dom';\nimport './Posts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://strangers-things.herokuapp.com/api';\nconst cohort = '/2108-CSE-RM-WEB-PT';\nconst postURL = `${baseURL}${cohort}/posts`;\n\nconst CurrentUserPosts = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showCredentialsError, setShowCredentialsError] = useState(false);\n  const [accountError, setAccountError] = useState('');\n  const navigate = useNavigate();\n\n  const fetchUserData = async auth_user_token => {\n    try {\n      const response = await fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${auth_user_token}`\n        }\n      });\n      const result = await response.json();\n      console.log('fetchuserdata', result);\n      return result;\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actionHeader\",\n      children: action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitAccountInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          placeholder: \"username\",\n          onChange: event => {\n            setUsername(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          placeholder: \"password\",\n          onChange: event => {\n            setPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), showCredentialsError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: accountError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 34\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(CurrentUserPosts, \"17k6+vnJSkT7EewIPhjAgwps6h8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CurrentUserPosts;\nexport default CurrentUserPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentUserPosts\");","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/components/CurrentUserPosts.js"],"names":["React","useState","useEffect","ReactDOM","Routes","Route","Link","NavLink","BrowserRouter","Router","useNavigate","useParams","useSearchParams","baseURL","cohort","postURL","CurrentUserPosts","username","setUsername","password","setPassword","showCredentialsError","setShowCredentialsError","accountError","setAccountError","navigate","fetchUserData","auth_user_token","response","fetch","headers","result","json","console","log","error","action","submitAccountInfo","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuCC,aAAa,IAAIC,MAAxD,EAAgEC,WAAhE,EAA6EC,SAA7E,EAAwFH,aAAxF,EAAuGI,eAAvG,QAA8H,kBAA9H;AACA,OAAO,aAAP;;;AAIA,MAAMC,OAAO,GAAG,4CAAhB;AACA,MAAMC,MAAM,GAAG,qBAAf;AACA,MAAMC,OAAO,GAAI,GAAEF,OAAQ,GAAEC,MAAO,QAApC;;AAEA,MAAME,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,oBAAD,EAAuBC,uBAAvB,IAAkDrB,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMwB,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,aAAa,GAAG,MAAOC,eAAP,IAA2B;AAC7C,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wEAAF,EAA4E;AACpGC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAkB,UAASH,eAAgB;AAFtC;AAD2F,OAA5E,CAA5B;AAMA,YAAMI,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,MAA7B;AACA,aAAOA,MAAP;AACH,KAVD,CAUE,OAAOI,KAAP,EAAc,CAEf;AACJ,GAdD;;AAiBA,sBAAO;AAAA,4BACH;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAM,MAAA,QAAQ,EAAEC,iBAAhB;AAAA,8BACA;AAAA,+BAAK;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEpB,QAA1B;AAAoC,UAAA,WAAW,EAAC,UAAhD;AAA2D,UAAA,QAAQ,EAAGqB,KAAD,IAAS;AAACpB,YAAAA,WAAW,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AAAgC;AAA/G;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,+BAAK;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,KAAK,EAAErB,QAA9B;AAAwC,UAAA,WAAW,EAAC,UAApD;AAA+D,UAAA,QAAQ,EAAGmB,KAAD,IAAS;AAAClB,YAAAA,WAAW,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AAAgC;AAAnH;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,+BAAK;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAODnB,oBAAoB,gBAAG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBE;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiD,IAPpE;AAAA,kBAAP;AAUC,CAlCL;;GAAMP,gB;UAKeN,W;;;KALfM,gB;AAmCN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Routes, Route, Link, NavLink, BrowserRouter as Router, useNavigate, useParams, BrowserRouter, useSearchParams } from 'react-router-dom';\nimport './Posts.css'\n\n\n\nconst baseURL = 'https://strangers-things.herokuapp.com/api'\nconst cohort = '/2108-CSE-RM-WEB-PT'\nconst postURL = `${baseURL}${cohort}/posts`\n\nconst CurrentUserPosts = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [showCredentialsError, setShowCredentialsError] = useState(false)\n    const [accountError, setAccountError] = useState('')\n    const navigate = useNavigate()\n\n    const fetchUserData = async (auth_user_token) => {\n        try {\n            const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${auth_user_token}`\n                }\n            })\n            const result = await response.json()\n            console.log('fetchuserdata', result)\n            return result\n        } catch (error) {\n            \n        }\n    }\n\n    \n    return <>\n        <div className=\"actionHeader\">{action}</div>\n        <form onSubmit={submitAccountInfo}>\n        <div><input type=\"text\" value={username} placeholder=\"username\" onChange={(event)=>{setUsername(event.target.value)}}/></div>\n        <div><input type=\"password\" value={password} placeholder=\"password\" onChange={(event)=>{setPassword(event.target.value)}}/></div>\n        <div><button type=\"submit\">submit</button></div>\n        </form>\n        { showCredentialsError ? <div className=\"error\">{accountError}</div> : null }\n\n    </>\n    }\nexport default CurrentUserPosts;"]},"metadata":{},"sourceType":"module"}