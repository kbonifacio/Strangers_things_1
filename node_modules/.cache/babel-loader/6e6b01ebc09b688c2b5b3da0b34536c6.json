{"ast":null,"code":"import _slicedToArray from\"/Users/kriseldabonifacio/course_work/Strangers_things/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import ReactDOM from'react-dom';import{Routes,Route,Link,NavLink,BrowserRouter as Router,useParams,BrowserRouter}from'react-router-dom';import{useNavigate}from'react-router';import'./style.css';import{Posts,CurrentUserPosts,Message,Home,AccountForm,Profile,AddPost}from'./components';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddPostButton=function AddPostButton(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(NavLink,{to:\"/new_post\",className:\"addPostLink\",children:\"Add a Post\"})});};var Main=function Main(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoggedIn=_useState4[0],setIsLoggedIn=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),currentUser=_useState6[0],setCurrentUser=_useState6[1];useEffect(function(){var savedToken=localStorage.getItem('token');console.log('token exists');if(savedToken){setToken(savedToken);setIsLoggedIn(true);}});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"nav\",{children:[/*#__PURE__*/_jsx(NavLink,{to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(NavLink,{to:\"/account\",children:\"Account\"}),/*#__PURE__*/_jsx(NavLink,{to:\"posts\",children:\"Posts\"})]}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Home,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"accountSubmissionContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"homeRegistrationContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Hello Stranger. \"}),!isLoggedIn&&/*#__PURE__*/_jsx(AccountForm,{action:\"register\",setToken:setToken,setIsLoggedIn:setIsLoggedIn,isLoggedIn:isLoggedIn,setCurrentUser:setCurrentUser})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"homeLoginContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome Back.\"}),!isLoggedIn&&/*#__PURE__*/_jsx(AccountForm,{action:\"login\",setToken:setToken,setIsLoggedIn:setIsLoggedIn,isLoggedIn:isLoggedIn,setCurrentUser:setCurrentUser})]})]})]})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",exact:true,element:/*#__PURE__*/_jsx(AccountForm,{action:\"register\",setToken:setToken,setIsLoggedIn:setIsLoggedIn,isLoggedIn:isLoggedIn,setCurrentUser:setCurrentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(AccountForm,{setToken:setToken,action:\"login\",setIsLoggedIn:setIsLoggedIn,isLoggedIn:isLoggedIn,setCurrentUser:setCurrentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/account\",exact:true,element:/*#__PURE__*/_jsx(Profile,{isLoggedIn:isLoggedIn,currentUser:currentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/posts\",exact:true,element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"postHeader\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Thingy Listings\"})}),isLoggedIn&&/*#__PURE__*/_jsx(\"div\",{className:\"addPostButton\",children:/*#__PURE__*/_jsx(AddPostButton,{})}),/*#__PURE__*/_jsx(Posts,{currentUser:currentUser,token:token,isLoggedIn:isLoggedIn})]})}),/*#__PURE__*/_jsx(Route,{path:\"/message\",exact:true,element:/*#__PURE__*/_jsx(Message,{})}),/*#__PURE__*/_jsx(Route,{path:\"/new_post\",exact:true,element:/*#__PURE__*/_jsx(AddPost,{token:token,currentUser:currentUser})})]})]})});};ReactDOM.render(/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(Main,{})}),document.querySelector('#app'));","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/index.js"],"names":["React","useEffect","useState","ReactDOM","Routes","Route","Link","NavLink","BrowserRouter","Router","useParams","useNavigate","Posts","CurrentUserPosts","Message","Home","AccountForm","Profile","AddPost","AddPostButton","Main","token","setToken","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","savedToken","localStorage","getItem","console","log","render","document","querySelector"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Routes, Route, Link, NavLink, BrowserRouter as Router, useParams, BrowserRouter } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport './style.css'\nimport {\n   Posts,\n   CurrentUserPosts,\n   Message,\n   Home,\n   AccountForm,\n   Profile,\n   AddPost,\n} from './components'\n\nconst AddPostButton = () => {\n    return <>\n    <NavLink to='/new_post' className='addPostLink'>Add a Post</NavLink>\n    </>\n}\n\nconst Main = () => {\n    const [token, setToken] = useState('')\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const [currentUser, setCurrentUser] = useState({})\n\n    useEffect(() => {\n        const savedToken = localStorage.getItem('token')\n        console.log('token exists')\n        if (savedToken) {\n            setToken(savedToken)\n            setIsLoggedIn(true)\n        }\n    })\n\n    return (\n        <>\n        <div>\n        \n        <nav>\n            <NavLink to='/'>Home</NavLink>\n            <NavLink to='/account'>Account</NavLink> \n            <NavLink to='posts'>Posts</NavLink>\n        </nav>\n       \n        <Routes>\n            <Route path='/' exact element={ \n                <>\n                <Home /> \n                <div className='accountSubmissionContainer'>\n                    <div className='homeRegistrationContainer'>\n                        <h1>Hello Stranger. </h1>\n                        { !isLoggedIn && <AccountForm action='register' setToken={setToken} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/> } \n                    </div>\n                    <div className='homeLoginContainer'>\n                        <h1>Welcome Back.</h1>\n                        { !isLoggedIn && <AccountForm action='login' setToken={setToken} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/> }\n                    </div>\n                </div>\n                </>\n                }/>\n            <Route path='/register' exact element= { <AccountForm action='register' setToken={setToken} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser}/> } />\n            <Route path='/login' element={ <AccountForm setToken={setToken} action=\"login\" setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser} /> } />\n            <Route path='/account' exact element = { <Profile isLoggedIn={isLoggedIn} currentUser={currentUser} /> } />\n            <Route path='/posts' exact element={\n                <> \n                <div className='postHeader'><h1>Thingy Listings</h1></div>\n                {isLoggedIn && <div className='addPostButton'><AddPostButton /></div> } \n                <Posts currentUser={currentUser} token={token} isLoggedIn={isLoggedIn}/>\n                </> } />\n            <Route path='/message' exact element={ <Message /> } />\n            <Route path='/new_post' exact element={ <AddPost token={token} currentUser={currentUser}/> } />\n        </Routes>\n        </div>\n        </>\n        \n    )\n\n}\n\n\n\nReactDOM.render(\n    <Router>\n        <Main />\n    </Router>,\n    document.querySelector('#app')\n)"]},"metadata":{},"sourceType":"module"}