{"ast":null,"code":"var _jsxFileName = \"/Users/kriseldabonifacio/course_work/Strangers_things/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://strangers-things.herokuapp.com/api';\nconst cohort = '/2108-CSE-RM-WEB-PT';\nconst postURL = `${baseURL}${cohort}/posts`;\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    token,\n    currentUser,\n    posts,\n    setPosts,\n    post_id,\n    currentUserPosts,\n    setCurrentUserPosts\n  } = _ref;\n\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(postURL);\n      const result = await response.json();\n      setPosts(result.data.posts);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(fetchPosts, []);\n\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const result = await response.json();\n      setCurrentUserPosts(result.data.posts);\n    } catch (error) {}\n  };\n\n  const handleEdit = async event => {\n    event.preventDefault();\n    fetch(`http://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts/${post_id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: post\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: post.title,\n        placeholder: \"Post Title\",\n        onChange: event => {\n          setPost({ ...post,\n            title: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditPost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/components/EditPost.js"],"names":["React","useState","useEffect","baseURL","cohort","postURL","EditPost","token","currentUser","posts","setPosts","post_id","currentUserPosts","setCurrentUserPosts","fetchPosts","response","fetch","result","json","data","error","fetchUserData","headers","handleEdit","event","preventDefault","method","body","JSON","stringify","post","then","console","log","catch","title","setPost","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,OAAO,GAAG,4CAAhB;AACA,MAAMC,MAAM,GAAG,qBAAf;AACA,MAAMC,OAAO,GAAI,GAAEF,OAAQ,GAAEC,MAAO,QAApC;;AAEA,MAAME,QAAQ,GAAG,QAA2F;AAAA;;AAAA,MAA1F;AAACC,IAAAA,KAAD;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA,OAAtC;AAA+CC,IAAAA,gBAA/C;AAAiEC,IAAAA;AAAjE,GAA0F;;AACxG,QAAMC,UAAU,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,OAAD,CAA5B;AACA,YAAMY,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAR,MAAAA,QAAQ,CAACO,MAAM,CAACE,IAAP,CAAYV,KAAb,CAAR;AAGD,KAND,CAME,OAAOW,KAAP,EAAc;AACd,YAAMA,KAAN;AACD;AACF,GAVH;;AAWElB,EAAAA,SAAS,CACLY,UADK,EACO,EADP,CAAT;;AAIA,QAAMO,aAAa,GAAG,YAAY;AAChC,QAAI;AACA,YAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,wEAAF,EAA4E;AACtGM,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAkB,UAASf,KAAM;AAF5B;AAD6F,OAA5E,CAA5B;AAMA,YAAMU,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAL,MAAAA,mBAAmB,CAACI,MAAM,CAACE,IAAP,CAAYV,KAAb,CAAnB;AACH,KATD,CASE,OAAOW,KAAP,EAAc,CAEf;AACF,GAbD;;AAeN,QAAMG,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEAT,IAAAA,KAAK,CAAE,sEAAqEL,OAAQ,EAA/E,EAAkF;AACrFe,MAAAA,MAAM,EAAE,OAD6E;AAErFJ,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAkB,UAASf,KAAM;AAF1B,OAF4E;AAMrFoB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAEA;AADa,OAAf;AAN+E,KAAlF,CAAL,CASGC,IATH,CASQhB,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EATpB,EAUGa,IAVH,CAUQd,MAAM,IAAI;AACde,MAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACD,KAZH,EAaGiB,KAbH,CAaSF,OAAO,CAACZ,KAbjB;AAeD,GAlBH;;AAmBE,sBAAO;AAAA,2BACL;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEU,IAAI,CAACK,KAAnB;AAA0B,QAAA,WAAW,EAAC,YAAtC;AAAmD,QAAA,QAAQ,EAAGX,KAAD,IAAS;AAC9DY,UAAAA,OAAO,CAAC,EAAC,GAAGN,IAAJ;AAAUK,YAAAA,KAAK,EAAEX,KAAK,CAACa,MAAN,CAAaC;AAA9B,WAAD,CAAP;AAA8C;AADtD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAQ,QAAA,OAAO,EAAEf,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,mBAAP;AASD,CA3DD;;GAAMjB,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst baseURL = 'https://strangers-things.herokuapp.com/api'\nconst cohort = '/2108-CSE-RM-WEB-PT'\nconst postURL = `${baseURL}${cohort}/posts`\n\nconst EditPost = ({token, currentUser, posts, setPosts, post_id, currentUserPosts, setCurrentUserPosts}) => {\n    const fetchPosts = async () => {\n        try {\n          const response = await fetch(postURL)\n          const result = await response.json()\n          setPosts(result.data.posts)\n          \n    \n        } catch (error) {\n          throw error\n        }\n      }\n      useEffect (\n          fetchPosts, []\n      )\n  \n      const fetchUserData = async () => {\n        try {\n            const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n              }\n          })\n            const result = await response.json()\n            setCurrentUserPosts(result.data.posts)\n        } catch (error) {\n            \n        }\n      }\n\nconst handleEdit = async (event) => {\n    event.preventDefault()\n    \n    fetch(`http://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts/${post_id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: post\n      })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(result);\n      })\n      .catch(console.error);\n\n  }\n  return <>\n    <form>\n      <input value={post.title} placeholder='Post Title' onChange={(event)=>{\n              setPost({...post, title: event.target.value})}}></input>\n      <input type='text'></input>\n\n      <button onClick={handleEdit}>Edit</button>\n    </form>\n  </>\n}\n\n\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}