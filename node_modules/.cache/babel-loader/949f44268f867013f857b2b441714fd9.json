{"ast":null,"code":"var _jsxFileName = \"/Users/kriseldabonifacio/course_work/Strangers_things/src/components/CurrentUserPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Routes, Route, Link, NavLink, BrowserRouter as Router, useNavigate, useParams, BrowserRouter, useSearchParams } from 'react-router-dom';\nimport './Posts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://strangers-things.herokuapp.com/api';\nconst cohort = '/2108-CSE-RM-WEB-PT';\nconst postURL = `${baseURL}${cohort}/posts`;\n\nconst CurrentUserPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchTerm = searchParams.get('searchTerm');\n\n  const postMatches = (post, text) => {\n    text = text.toLowerCase();\n    const {\n      title,\n      description,\n      price,\n      location\n    } = post;\n\n    for (const field of [title, description, price, location]) {\n      if (field.toLowerCase().includes(text)) {\n        return true;\n      }\n    }\n  };\n\n  const filteredPosts = searchTerm ? posts.filter(post => postMatches(post, searchTerm)) : posts;\n\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(postURL);\n      const result = await response.json();\n      setPosts(result.data.posts);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(fetchPosts, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredPosts && filteredPosts.length ? filteredPosts.map(currentUser => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Item Description: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Price \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 48\n              }, this), post.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delivery\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Delivery \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this), \" \", post.willDeliver ? 'available' : 'not available']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CurrentUserPosts, \"Azs0lqXpPU8kB64WwIrnjGtDDb4=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = CurrentUserPosts;\nexport default CurrentUserPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentUserPosts\");","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/components/CurrentUserPosts.js"],"names":["React","useState","useEffect","ReactDOM","Routes","Route","Link","NavLink","BrowserRouter","Router","useNavigate","useParams","useSearchParams","baseURL","cohort","postURL","CurrentUserPosts","posts","setPosts","searchParams","setSearchParams","searchTerm","get","postMatches","post","text","toLowerCase","title","description","price","location","field","includes","filteredPosts","filter","fetchPosts","response","fetch","result","json","data","error","length","map","currentUser","willDeliver","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Routes, Route, Link, NavLink, BrowserRouter as Router, useNavigate, useParams, BrowserRouter, useSearchParams } from 'react-router-dom';\nimport './Posts.css'\n\n\n\nconst baseURL = 'https://strangers-things.herokuapp.com/api'\nconst cohort = '/2108-CSE-RM-WEB-PT'\nconst postURL = `${baseURL}${cohort}/posts`\n\nconst CurrentUserPosts = () => {\n    const [posts, setPosts] = useState([])\n  const [searchParams, setSearchParams] = useSearchParams()\n  const searchTerm = searchParams.get('searchTerm')\n\n  const postMatches = (post, text) => {\n    text = text.toLowerCase()\n    const {title, description, price, location } = post\n    for (const field of [title, description, price, location]) {\n      if(field.toLowerCase().includes(text)){\n        return true;\n      }\n    }\n  }\n\n  const filteredPosts = searchTerm ? posts.filter(post => postMatches(post, searchTerm)) : posts\n\n\n  \n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(postURL)\n      const result = await response.json()\n      setPosts(result.data.posts)\n\n    } catch (error) {\n      throw error\n    }\n  }\n  useEffect (\n      fetchPosts, []\n  )\n  return <>\n    \n    { filteredPosts && filteredPosts.length\n      ? filteredPosts.map((currentUser) => {\n        return (\n            <div key={post._id} className='post'>\n                <div className='description'>\n                    <div className='postTitle'><b>{post.title}</b></div>   \n                        <div><b>Item Description: </b><i>{post.description}</i></div>\n                </div>\n                <div>\n                    <div>\n                        <div className='price'><b>Price </b>{post.price}</div>\n                    </div>\n                    <div>\n                        <div className='delivery'>\n                            <b>Delivery </b> {post.willDeliver ? 'available' : 'not available'}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n      })\n      : <h1>No results</h1>\n    } \n  </>\n}\nexport default CurrentUserPosts;"]},"metadata":{},"sourceType":"module"}