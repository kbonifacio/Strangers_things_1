{"ast":null,"code":"var _jsxFileName = \"/Users/kriseldabonifacio/course_work/Strangers_things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Routes, Route, Link, NavLink, BrowserRouter as Router, useNavigate, useParams, BrowserRouter } from 'react-router-dom';\nimport './Posts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://strangers-things.herokuapp.com/api';\nconst cohort = '/2108-CSE-RM-WEB-PT';\nconst postURL = `${baseURL}${cohort}/posts`;\n\nconst Posts = async token => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const deletePostURL = `${baseURL}${cohort}/posts/${token}`;\n\n  const deletePost = token => {\n    fetch(`${deletePostURL}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  const handleDelete = async post_id => {\n    await deletePost(token, post_id);\n    const postResult = await fetchPosts();\n    setPosts(postResult);\n  };\n\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(postURL);\n      const result = await response.json();\n      setPosts(result.data.posts);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(fetchPosts, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Seller: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 26\n            }, this), \" \", post.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete,\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), \" \", /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/message\",\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 77\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Item Description: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Price \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 48\n              }, this), post.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delivery\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Delivery \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), \" \", post.willDeliver ? 'available' : 'not available']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/components/Posts.js"],"names":["React","useState","useEffect","ReactDOM","Routes","Route","Link","NavLink","BrowserRouter","Router","useNavigate","useParams","baseURL","cohort","postURL","Posts","token","posts","setPosts","deletePostURL","deletePost","fetch","method","headers","then","response","json","result","console","log","catch","error","handleDelete","post_id","postResult","fetchPosts","data","map","post","title","author","username","description","price","willDeliver","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Routes, Route, Link, NavLink, BrowserRouter as Router, useNavigate, useParams, BrowserRouter } from 'react-router-dom';\nimport './Posts.css'\n\n\n  const baseURL = 'https://strangers-things.herokuapp.com/api'\n  const cohort = '/2108-CSE-RM-WEB-PT'\n  const postURL = `${baseURL}${cohort}/posts`\n\n\n\n\nconst Posts = async (token) => {\n  const [posts, setPosts] = useState([])\n  \n  \n  const deletePostURL = `${baseURL}${cohort}/posts/${token}`\n\n  const deletePost = (token) => {\n    fetch(`${deletePostURL}`, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(response => response.json())\n    .then(result => {\n      console.log(result);\n    })\n    .catch(console.error);\n  }\n\n  const handleDelete = async (post_id) => {\n    await deletePost(token, post_id)\n    const postResult = await fetchPosts()\n    setPosts(postResult)\n\n  }\n \n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(postURL)\n      const result = await response.json()\n      setPosts(result.data.posts)\n\n    } catch (error) {\n      throw error\n    }\n  }\n  useEffect (\n      fetchPosts, []\n  )\n  return <>\n    \n    {\n      posts.map((post) => {\n        return (\n            <div key={post._id} className='post'>\n                <div className='description'>\n                    <div className='postTitle'><b>{post.title}</b></div>   \n                    <div><b>Seller: </b> {post.author.username}</div>\n                    <button onClick={()=>handleDelete}>Delete Post</button> <NavLink to='/message'>Send Message</NavLink>\n                    <div><b>Item Description: </b><i>{post.description}</i></div>\n                </div>\n                <div>\n                    <div>\n                        <div className='price'><b>Price </b>{post.price}</div>\n                    </div>\n                    <div>\n                        <div className='delivery'>\n                            <b>Delivery </b> {post.willDeliver ? 'available' : 'not available'}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n      })\n    }\n  </>\n}\nexport default Posts;"]},"metadata":{},"sourceType":"module"}