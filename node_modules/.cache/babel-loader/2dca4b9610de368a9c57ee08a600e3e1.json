{"ast":null,"code":"var _jsxFileName = \"/Users/kriseldabonifacio/course_work/Strangers_things/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./Account.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountForm = _ref => {\n  _s();\n\n  let {\n    setToken,\n    action,\n    setIsLoggedIn,\n    isLoggedIn,\n    setCurrentUser\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showCredentialsError, setShowCredentialsError] = useState(false);\n  const [accountError, setAccountError] = useState('');\n  const navigate = useNavigate()``;\n  useEffect(() => {\n    if (isLoggedIn) navigate('/account');\n  }, []);\n\n  const fetchUserData = async auth_user_token => {\n    try {\n      const response = await fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${auth_user_token}`\n        }\n      });\n      const result = await response.json();\n      console.log('fetchuserdata', result);\n      return result;\n    } catch (error) {}\n  };\n\n  const submitAccountInfo = async event => {\n    try {\n      event.preventDefault();\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/${action}`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      });\n      const result = await response.json();\n      const auth_user_token = result.data.token;\n      console.log('promise', result);\n      setToken(auth_user_token);\n      setIsLoggedIn(true);\n      const userData = await fetchUserData(auth_user_token);\n      console.log('userData', userData);\n      setCurrentUser(userData.data.username);\n      setShowCredentialsError(false);\n      navigate('/account');\n    } catch (error) {\n      console.log(error);\n      const errorMessage = action === 'login' ? \"Incorrect username and password combination.\" : \"Username already taken.\";\n      setAccountError(errorMessage);\n      setShowCredentialsError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actionHeader\",\n      children: action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitAccountInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          placeholder: \"username\",\n          onChange: event => {\n            setUsername(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          placeholder: \"password\",\n          onChange: event => {\n            setPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), showCredentialsError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: accountError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 30\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"kmWS63WQaGfJe2fkJkM8lg1phps=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/components/Account.js"],"names":["React","useState","useEffect","useNavigate","AccountForm","setToken","action","setIsLoggedIn","isLoggedIn","setCurrentUser","username","setUsername","password","setPassword","showCredentialsError","setShowCredentialsError","accountError","setAccountError","navigate","fetchUserData","auth_user_token","response","fetch","headers","result","json","console","log","error","submitAccountInfo","event","preventDefault","method","body","JSON","stringify","user","data","token","userData","errorMessage","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./Account.css\" \n\n\nconst AccountForm = ({setToken, action, setIsLoggedIn, isLoggedIn, setCurrentUser}) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [showCredentialsError, setShowCredentialsError] = useState(false)\n  const [accountError, setAccountError] = useState('')\n  const navigate = useNavigate()\n``\n\n  useEffect(() => {\n    if (isLoggedIn) navigate('/account')\n  }, [])\n\n  const fetchUserData = async (auth_user_token) => {\n      try {\n          const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${auth_user_token}`\n            }\n        })\n          const result = await response.json()\n          console.log('fetchuserdata', result)\n          return result\n      } catch (error) {\n          \n      }\n  }\n\n  const submitAccountInfo = async (event) => {\n    try {\n      event.preventDefault();\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/${action}`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      })\n      const result = await response.json()\n      const auth_user_token = result.data.token\n      console.log('promise', result)\n      setToken(auth_user_token)\n      setIsLoggedIn(true)\n  \n\n      const userData = await fetchUserData(auth_user_token)\n      console.log('userData', userData)\n      setCurrentUser(userData.data.username)\n      setShowCredentialsError(false)\n      navigate('/account')\n    } catch (error) {\n      console.log(error)\n      const errorMessage = action === 'login' ? \"Incorrect username and password combination.\" : \"Username already taken.\"\n      setAccountError(errorMessage)\n      setShowCredentialsError(true)\n    }\n  }\n\n  return <>\n    <div className=\"actionHeader\">{action}</div>\n    <form onSubmit={submitAccountInfo}>\n      <div><input type=\"text\" value={username} placeholder=\"username\" onChange={(event)=>{setUsername(event.target.value)}}/></div>\n      <div><input type=\"password\" value={password} placeholder=\"password\" onChange={(event)=>{setPassword(event.target.value)}}/></div>\n      <div><button type=\"submit\">submit</button></div>\n    </form>\n    { showCredentialsError ? <div className=\"error\">{accountError}</div> : null }\n\n  </>\n}\n\nexport default AccountForm;\n"]},"metadata":{},"sourceType":"module"}