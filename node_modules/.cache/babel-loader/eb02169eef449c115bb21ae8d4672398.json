{"ast":null,"code":"var _jsxFileName = \"/Users/kriseldabonifacio/course_work/Strangers_things/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router';\nimport './DeletePost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://strangers-things.herokuapp.com/api';\nconst cohort = '/2108-CSE-RM-WEB-PT';\nconst postURL = `${baseURL}${cohort}/posts`;\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    token,\n    currentUser,\n    posts,\n    setPosts,\n    post_id,\n    currentUserPosts,\n    setCurrentUserPosts\n  } = _ref;\n  const currentPost = posts.find(post);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(postURL);\n      const result = await response.json();\n      setPosts(result.data.posts);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(fetchPosts, []);\n\n  const fetchUserData = async () => {\n    console.log('fetch user token', token);\n\n    try {\n      const response = await fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const result = await response.json();\n      console.log('fetchuserdata', result);\n      setCurrentUserPosts(result.data.posts);\n    } catch (error) {}\n  };\n\n  const handleEdit = async event => {\n    event.preventDefault();\n    fetch(`http://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts/${post_id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: post\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: post.title,\n        placeholder: \"Post Title\",\n        onChange: event => {\n          setPost({ ...post,\n            title: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditPost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/components/EditPost.js"],"names":["React","useState","useEffect","Navigate","useNavigate","baseURL","cohort","postURL","EditPost","token","currentUser","posts","setPosts","post_id","currentUserPosts","setCurrentUserPosts","currentPost","find","post","fetchPosts","response","fetch","result","json","data","error","fetchUserData","console","log","headers","handleEdit","event","preventDefault","method","body","JSON","stringify","then","catch","title","setPost","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router';\nimport './DeletePost.css'\n\nconst baseURL = 'https://strangers-things.herokuapp.com/api'\nconst cohort = '/2108-CSE-RM-WEB-PT'\nconst postURL = `${baseURL}${cohort}/posts`\n\nconst EditPost = ({token, currentUser, posts, setPosts, post_id, currentUserPosts, setCurrentUserPosts}) => {\n    const currentPost = posts.find(post)\n    const fetchPosts = async () => {\n        try {\n          const response = await fetch(postURL)\n          const result = await response.json()\n          setPosts(result.data.posts)\n          \n    \n        } catch (error) {\n          throw error\n        }\n      }\n      useEffect (\n          fetchPosts, []\n      )\n  \n      const fetchUserData = async () => {\n        console.log('fetch user token', token)\n        try {\n            const response = await fetch ('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/users/me', {\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n              }\n          })\n            const result = await response.json()\n            console.log('fetchuserdata', result)\n            setCurrentUserPosts(result.data.posts)\n        } catch (error) {\n            \n        }\n      }\n\nconst handleEdit = async (event) => {\n    event.preventDefault()\n    \n    fetch(`http://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts/${post_id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: post\n      })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(result);\n      })\n      .catch(console.error);\n\n  }\n  return <>\n  <form>\n    <input value={post.title} placeholder='Post Title' onChange={(event)=>{\n            setPost({...post, title: event.target.value})}}></input>\n    <input type='text'></input>\n\n    <button onClick={handleEdit}>Edit</button>\n  </form>\n  \n  \n  </>\n}\n\n\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}