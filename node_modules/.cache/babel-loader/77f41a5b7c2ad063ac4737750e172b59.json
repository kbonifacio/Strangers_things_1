{"ast":null,"code":"var _jsxFileName = \"/Users/kriseldabonifacio/course_work/Strangers_things/src/components/CurrentUserMessages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navigate, useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SendMessage = _ref => {\n  let {\n    token,\n    currentUser\n  } = _ref;\n\n  const handleSubmitMessage = () => {\n    fetch('https://strangers-things.herokuapp.com/api/COHORT-NAME/2108-CSE-RM-WEB-PT/5e8929ddd439160017553e06/messages', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer TOKEN_STRING_HERE'\n      },\n      body: JSON.stringify({\n        message: {\n          content: \"Do you still have this?  Would you take $10 less?\"\n        }\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  return;\n};\n\n_c = SendMessage;\nexport default SendMessage;\n\nconst AddPost = _ref2 => {\n  _s();\n\n  let {\n    token,\n    currentUser\n  } = _ref2;\n  const blankPost = {\n    title: '',\n    description: '',\n    price: ''\n  };\n  const [post, setPost] = useState(blankPost);\n  const navigate = useNavigate();\n  console.log('current User', currentUser);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: post\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).finally(navigate('/posts')).catch(console.error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a new Thingy Listing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: post.title,\n        placeholder: \"Post Title\",\n        onChange: event => {\n          setPost({ ...post,\n            title: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), \"Description\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: post.description,\n        placeholder: \"Item Description\",\n        onChange: event => {\n          setPost({ ...post,\n            description: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this), \"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: post.price,\n        placeholder: \"Item price\",\n        onChange: event => {\n          setPost({ ...post,\n            price: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this), \"Will Deliver\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: \"yes\",\n        onChange: event => {\n          setPost({ ...post,\n            willDeliver: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddPost, \"bLAzBmo/c+qjhlcE2mr6NQAx1wI=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = AddPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SendMessage\");\n$RefreshReg$(_c2, \"AddPost\");","map":{"version":3,"sources":["/Users/kriseldabonifacio/course_work/Strangers_things/src/components/CurrentUserMessages.js"],"names":["React","useState","Navigate","useNavigate","SendMessage","token","currentUser","handleSubmitMessage","fetch","method","headers","body","JSON","stringify","message","content","then","response","json","result","console","log","catch","error","AddPost","blankPost","title","description","price","post","setPost","navigate","handleSubmit","event","preventDefault","finally","target","value","willDeliver"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Navigate, useNavigate } from 'react-router';\n\nconst SendMessage = ({token, currentUser}) => {\n    const handleSubmitMessage = () => {\n        fetch('https://strangers-things.herokuapp.com/api/COHORT-NAME/2108-CSE-RM-WEB-PT/5e8929ddd439160017553e06/messages', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer TOKEN_STRING_HERE'\n            },\n            body: JSON.stringify({\n                message: {\n                content: \"Do you still have this?  Would you take $10 less?\"\n                }\n            })\n            }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n            })\n            .catch(console.error);\n                }\n    return \n    \n\n}\nexport default SendMessage;\n\n\n\nconst AddPost = ({token, currentUser}) => {\n    const blankPost = {title: '', description: '', price: ''}\n    const [post, setPost] = useState(blankPost)\n    const navigate = useNavigate()\n    console.log('current User', currentUser)\n\nconst handleSubmit = async (event) => {\n        event.preventDefault()\n        fetch('https://strangers-things.herokuapp.com/api/2108-CSE-RM-WEB-PT/posts', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                post: post\n            })\n            }).then(response => response.json())\n            .then(result => {\n                console.log(result)\n                \n            }).finally(navigate('/posts'))\n            .catch(console.error);\n} \nreturn <>\n    <h1>Create a new Thingy Listing.</h1>\n    <form onSubmit={handleSubmit}>\n        Title:<input value={post.title} placeholder='Post Title' onChange={(event)=>{\n            setPost({...post, title: event.target.value})\n        }}></input>\n        Description<input value={post.description} placeholder='Item Description' onChange={(event)=>{\n            setPost({...post, description: event.target.value})\n        }}></input>\n        Price<input value={post.price} placeholder='Item price' onChange={(event)=>{\n            setPost({...post, price: event.target.value})\n        }}></input>\n        Will Deliver<input type='checkbox' value='yes' onChange={(event)=>{\n            setPost({...post, willDeliver: event.target.value})\n        }}></input>\n        <button type='submit'>Submit</button>\n    </form>\n</>\n}\n"]},"metadata":{},"sourceType":"module"}